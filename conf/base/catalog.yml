# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS

# REFERENTIALS
data_sources:
  type: text.TextDataSet
  filepath: data/referentials/data_sources.json

# SCHEMAS
schema_staging:
  type: ogs_connectors.extras.datasets.json_file_dataset.JSONFileDataSet
  filepath: data/schemas/staging.json
  versioned: false
#  load_args:
#    orient: values

# ADEME

# Input
ademe_assessments:
  type: pandas.CSVDataSet
  filepath: s3://opengeoscales-dev/raw/ademe/beges/assessments.csv
  credentials: dev_s3

ademe_emissions:
  type: pandas.CSVDataSet
  filepath: s3://opengeoscales-dev/raw/ademe/beges/emissions.csv
  credentials: dev_s3

ademe_legal_units:
  type: pandas.CSVDataSet
  filepath: s3://opengeoscales-dev/raw/ademe/beges/legal_units.csv
  credentials: dev_s3

ademe_scope_items:
  type: pandas.CSVDataSet
  filepath: s3://opengeoscales-dev/raw/ademe/beges/scope_items.csv
  credentials: dev_s3

ademe_texts:
  type: pandas.CSVDataSet
  filepath: s3://opengeoscales-dev/raw/ademe/beges/texts.csv
  credentials: dev_s3

# Output
ademe_merged:
  type: pandas.JSONDataSet
  filepath: data/01_raw/test.json
  save_args:
    orient: records
    lines: true


# CDIAC

# Input
cdiac_nations_emissions:
  type: pandas.CSVDataSet
  filepath: s3://ogs-dev/data/raw/ghg-emissions/cdiac/Fossil-Fuel_CO2_Emissions_by_Nation.csv
  credentials: dev_s3


# GCP
gcp:
  type: ogs_connectors.extras.datasets.json_lines_dataset.JSONLinesDataSet
  filepath: data/01_raw/gcp-carbon-v2.json
#  load_args:
#    orient: records
#    lines: true
